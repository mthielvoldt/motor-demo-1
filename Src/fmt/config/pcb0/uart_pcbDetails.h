/** Provides project-specific config for CMSIS (ARM) UART Driver.
 * 
 * @brief
 * Normally, these macros are defined in MX_Device.h, which is generated by a 
 * tool called csolution, which is part of cmsis-toolbox. 
 * https://github.com/Open-CMSIS-Pack/cmsis-toolbox
 * MX_Device.h combines details for various drivers (UART, CAN...)
 * 
 * Rather than rely on the generator, this file is hand-edited.
 * See MX_Device.h in same directory as this file for an explanation. 
 *
 * Source-of-Truth for:
 * - availability of HW resources consistent with PCB connections.
 *
 * Language level:
 * - Project  num inbound
 * - HAL      yes outbound
 * - dev.fam  no
 * - device   no
 * 
 * @note
 * - GPIO_MODE_AF_PP doesn't imply output.  AF = alternate function.  PP means
 *   push-pull is available for perpiheral to use, but not necessarily used.
 * 
 * @note Recommended Edit Process
 * - _Pin, _GPIO_Pin, _GPIOx values can be inspected in CubeMX, PCB schematic,
 *   or looked up in Table 17. Alternate function AF0 to AF7bin datasheet 
 *   https://www.st.com/resource/en/datasheet/stm32l476rg.pdf.
 * - All _Mode are GPIO_MODE_AF_PP. This just gives peripheral control of pin.
 * - All _PuPd are GPIO_NOPULL.  No pull resistors connected.
 * - All _Speed are GPIO_SPEED_FREQ_LOW. **Not sure why**
 * - Look up the proper _AF value in stm32<fam>xx_hal_gpio_ex.h.  Here's how: 
 *   - Assuming you're using UART3, Search for regex: "GPIO_AF[0-9]_US?ART3".
 *   - Inspect each result to find the one that applies to your device.  This 
 *     can be made obvious by defining your device in c_cpp_properties.json
 *     eg: "defines": ["STM32L476xx"].  The right value will be the one search
 *     result in an active code block. 
 */
#ifndef uart_pcbDetails_h
#define uart_pcbDetails_h

#define HAL_DMA_ENABLED
#define HAL_UART_ENABLED
#define HAL_GPIO_ENABLED
#define HAL_FAMILY_ENABLED
#include <stm32_hal_dispatch.h>

#define MX_UART2 1
#define FMT_DRIVER Driver_USART2
#define FMT_DRIVER_ID 2
#define FMT_BAUD_HZ 115200

// Following used in port/stm32/gpio_port.c
#define FMT_UART_GPIO_AF                    GPIO_AF7_USART2

#define FMT_UART_RX_Pin                        PB4
#define FMT_UART_RX_GPIO_Pin                   GPIO_PIN_4
#define FMT_UART_RX_GPIOx                      GPIOB

#define FMT_UART_TX_Pin                        PB3
#define FMT_UART_TX_GPIO_Pin                   GPIO_PIN_3
#define FMT_UART_TX_GPIOx                      GPIOB




#endif // include once
